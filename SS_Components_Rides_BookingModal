import React, { useState } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Badge } from "@/components/ui/badge";
import { Dialog, DialogContent, DialogHeader, DialogTitle } from "@/components/ui/dialog";
import { MapPin, Calendar, DollarSign, Users, CreditCard } from "lucide-react";
import { format } from "date-fns";

export default function BookingModal({ ride, onSubmit, onClose }) {
  const [bookingData, setBookingData] = useState({
    seats: 1,
    notes: "",
    paymentMethod: "card"
  });

  const handleInputChange = (field, value) => {
    setBookingData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    onSubmit(bookingData);
  };

  const totalPrice = bookingData.seats * ride.price_per_seat;

  return (
    <Dialog open={true} onOpenChange={onClose}>
      <DialogContent className="max-w-2xl">
        <DialogHeader>
          <DialogTitle>Book Your Ride</DialogTitle>
        </DialogHeader>
        
        <div className="space-y-6">
          {/* Ride Details */}
          <Card className="glass-card">
            <CardHeader>
              <CardTitle className="text-lg">Ride Details</CardTitle>
            </CardHeader>
            <CardContent className="space-y-3">
              <div className="flex items-center text-gray-600">
                <MapPin className="w-4 h-4 mr-2 text-[#5D4EFC]" />
                <span>{ride.origin} → {ride.destination}</span>
              </div>
              
              <div className="flex items-center text-gray-600">
                <Calendar className="w-4 h-4 mr-2 text-[#5D4EFC]" />
                <span>
                  {format(new Date(ride.departure_datetime), "MMM d, yyyy 'at' h:mm a")}
                </span>
              </div>
              
              <div className="flex items-center justify-between">
                <div className="flex items-center text-gray-600">
                  <DollarSign className="w-4 h-4 mr-1 text-[#5D4EFC]" />
                  <span>${ride.price_per_seat} per seat</span>
                </div>
                <Badge variant="outline" className="bg-[#37D5D6]/10 text-[#37D5D6] border-[#37D5D6]">
                  {ride.available_seats} seats available
                </Badge>
              </div>
            </CardContent>
          </Card>

          {/* Booking Form */}
          <form onSubmit={handleSubmit} className="space-y-4">
            <div className="space-y-2">
              <Label htmlFor="seats">Number of Seats</Label>
              <Select 
                value={bookingData.seats.toString()} 
                onValueChange={(value) => handleInputChange("seats", parseInt(value))}
              >
                <SelectTrigger>
                  <SelectValue placeholder="Select seats" />
                </SelectTrigger>
                <SelectContent>
                  {Array.from({ length: Math.min(ride.available_seats, 4) }, (_, i) => (
                    <SelectItem key={i + 1} value={(i + 1).toString()}>
                      {i + 1} seat{i + 1 > 1 ? 's' : ''}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
            </div>

            <div className="space-y-2">
              <Label htmlFor="notes">Pickup Notes (Optional)</Label>
              <Textarea
                id="notes"
                placeholder="Any special instructions for pickup..."
                value={bookingData.notes}
                onChange={(e) => handleInputChange("notes", e.target.value)}
                rows={3}
              />
            </div>

            {/* Payment Summary */}
            <Card className="bg-[#F4F5FA] border-[#5D4EFC]/20">
              <CardContent className="p-4">
                <div className="flex justify-between items-center mb-2">
                  <span className="text-gray-600">
                    {bookingData.seats} seat{bookingData.seats > 1 ? 's' : ''} × ${ride.price_per_seat}
                  </span>
                  <span className="font-semibold">${totalPrice}</span>
                </div>
                <div className="flex justify-between items-center text-sm text-gray-500">
                  <span>Platform fee</span>
                  <span>$0.00</span>
                </div>
                <hr className="my-2" />
                <div className="flex justify-between items-center font-semibold text-lg">
                  <span>Total</span>
                  <span className="text-[#5D4EFC]">${totalPrice}</span>
                </div>
              </CardContent>
            </Card>

            <div className="flex justify-end space-x-3">
              <Button type="button" variant="outline" onClick={onClose}>
                Cancel
              </Button>
              <Button
                type="submit"
                className="bg-[#5D4EFC] hover:bg-[#4B3FD1] text-white"
              >
                <CreditCard className="w-4 h-4 mr-2" />
                Book & Pay ${totalPrice}
              </Button>
            </div>
          </form>
        </div>
      </DialogContent>
    </Dialog>
  );
}
